boat 部分

void set_boat_master(string file)
设定船夫的文件名

void set_boat_bank1(string file)
设定岸边 1 的文件名

void set_boat_bank2(string file)
设定岸边 2 的文件名

void set_cross_msg(string msg)
设定渡河的信息，例如：过河、渡海，默认为 过河

void set_bank1_desc(string msg)
设定 bank 1 的描述信息，例如：北岸，默认：西岸

void set_bank2_desc(string msg)
设定 bank 2 的描述信息，例如：南岸，默认：东岸

在房间调用 setup() 函数之前，至少要设定了
set_boat_master、set_boat_bank1、set_boat_bank2
这三个文件名。
其它的设定都是可选的


bank 部分

void set_boat_file(string file)
设定船的文件名

void set_max_passenger(int n)
设定渡船最多的载人人数，默认是 6

void set_yell_msg(string msg)
设定玩家在此 yell 船家 看到的信息，默认："$N扯着嗓子喊道：“船家！！我要过河！！”\n"

在房间的 create() 函数里至少要设定 boat_file 这个文件名，
其它的设定都是可选的。

可重载的函数：
protected int valid_passenger(object who)
{
	if(!who)
		return 0;

	if( !who->query_temp("payed_duchuan") )
		return notify_fail("\n请先交钱后上船。\n");

	return 1;
}

此函数用来判断此人是否可以上船，一般要交了船钱
后被设定了 payed_duchuan 标记的人，此函数可以重载
来处理不同的情况，例如如果想社定为不收钱的渡口可以在
这个函数里直接 who->set_temp("payed_duchuan", 1)
然后返回 1 来确认，当然，船夫物件也要作相应的设定。

master 部分

void set_max_passenger(int n)
设定渡船最多的载人人数，默认是 6
注意要和 bank 里的设定一致。

void set_cross_msg(string msg)
设定渡河的信息，例如：过河、渡海，默认为 过河
注意要和 boat 里的设定一致。

这两个都是可选的设定，如要设定可以在船夫的
create()  函数设定。

可重载的函数：

int accept_object(object me,object obj)

接受物品，默认是接受船钱，如果你想设定不收钱
并且在 bank 部分重载了 valid_passenger 函数，
在这里就需要重载这个函数直接 return 0;
